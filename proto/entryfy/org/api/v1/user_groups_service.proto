syntax = "proto3";

package entryfy.org.api.v1;
import "entryfy/org/api/v1/entities.proto";

//option go_package = "github.com/entryfy/org/api/v1;org-api";
option java_multiple_files = true;
option java_package = "com.entryfy.org.api.v1";
option csharp_namespace = "Entryfy.Org.Api.V1";
option ruby_package = "Entryfy::Org::Api::V1";

service UserGroupsService {
    rpc GetGroups (GetGroupsRequest) returns (GetGroupsResponse) {
    }
    rpc CreateGroups (CreateGroupsRequest) returns (CreateGroupsResponse) {
    }
    rpc UpdateGroups (UpdateGroupsRequest) returns (UpdateGroupsResponse) {
    }
    rpc DeleteGroups (DeleteGroupsRequest) returns (DeleteGroupsResponse) {
    }

    rpc ChangeUsersOfGroups (ChangeUsersOfGroupsRequest) returns (ChangeUsersOfGroupsResponse) {
    }
    rpc ChangeDoorsOfGroups (ChangeDoorsOfGroupsRequest) returns (ChangeDoorsOfGroupsResponse) {
    }
    rpc ChangeSchedulesOfGroups (ChangeSchedulesOfGroupsRequest) returns (ChangeSchedulesOfGroupsResponse) {
    }
}

message GroupUsersSet {
    string uuid = 1; // User group UUID
    repeated string user_uuids = 2; // UUIDs of users to assign
}

message GroupDoorsSet {
    string uuid = 1; // User group UUID
    repeated string door_uuids = 2; // UUIDs of security devices with kind "door" to assign
}

message GroupSchedulesSet {
    string uuid = 1; // User group UUID
    repeated string schedule_uuids = 2; // UUIDs of schedules to assign
}

message GetGroupsRequest {
    string organization_slug = 1;
    repeated string uuids = 2; // UUIDs of groups to fetch. Fetches all if not specified
}

message GetGroupsResponse {
    repeated UserGroup user_groups = 1;
}

message CreateGroupsRequest {
    string organization_slug = 1;
    repeated UserGroup user_groups = 2;
}

message CreateGroupsResponse {
    repeated BizOperation biz_operations = 1;
}

message UpdateGroupsRequest {
    string organization_slug = 1;
    repeated UserGroup user_groups = 2;
}

message UpdateGroupsResponse {
    repeated BizOperation biz_operations = 1;
}

message DeleteGroupsRequest {
    string organization_slug = 1;
    repeated string uuids = 2;
}

message DeleteGroupsResponse {
    repeated BizOperation biz_operations = 1;
}

message ChangeUsersOfGroupsRequest {
    string organization_slug = 1;
    repeated GroupUsersSet group_users_sets = 2;
}

message ChangeUsersOfGroupsResponse {
    repeated BizOperation biz_operations = 1;
}

message ChangeDoorsOfGroupsRequest {
    string organization_slug = 1;
    repeated GroupDoorsSet group_doors_sets = 2;
}

message ChangeDoorsOfGroupsResponse {
    repeated BizOperation biz_operations = 1;
}

message ChangeSchedulesOfGroupsRequest {
    string organization_slug = 1;
    repeated GroupSchedulesSet group_schedules_sets = 2;
}

message ChangeSchedulesOfGroupsResponse {
    repeated BizOperation biz_operations = 1;
}